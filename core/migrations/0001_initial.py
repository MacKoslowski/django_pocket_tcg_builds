# Generated by Django 5.1.3 on 2024-11-16 21:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('card_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=45)),
                ('hp', models.IntegerField()),
                ('type', models.CharField(choices=[('item', 'Item'), ('supporter', 'Supporter'), ('basic', 'Basic'), ('stage_1', 'Stage1'), ('stage_2', 'Stage2')], max_length=30)),
                ('color', models.CharField(choices=[('grass', 'Grass'), ('fire', 'Fire'), ('water', 'Water'), ('lightning', 'Lightning'), ('fighting', 'Fighting'), ('psychic', 'Psychic'), ('colorless', 'Colorless'), ('darkness', 'Darkness'), ('metal', 'Metal'), ('dragon', 'Dragon'), ('fairy', 'Fairy')], max_length=30)),
                ('number', models.IntegerField()),
                ('rarity', models.CharField(max_length=30)),
                ('pack', models.CharField(max_length=30)),
                ('retreatCost', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=30)),
                ('weakness_type', models.CharField(choices=[('grass', 'Grass'), ('fire', 'Fire'), ('water', 'Water'), ('lightning', 'Lightning'), ('fighting', 'Fighting'), ('psychic', 'Psychic'), ('colorless', 'Colorless'), ('darkness', 'Darkness'), ('metal', 'Metal'), ('dragon', 'Dragon'), ('fairy', 'Fairy')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Energy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('symbol', models.CharField(max_length=1)),
                ('color_hex', models.CharField(max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Patch',
            fields=[
                ('patch_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('react_id', models.AutoField(primary_key=True, serialize=False)),
                ('deck_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('emoji', models.CharField(max_length=5)),
                ('patch_id', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('vote_id', models.AutoField(primary_key=True, serialize=False)),
                ('deck_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('vote_type', models.CharField(choices=[('upvote', 'Update'), ('downvote', 'Downvote')], max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ability_type', models.CharField(choices=[('attack', 'Attack'), ('ability', 'Ability'), ('poke-power', 'Poké-Power'), ('poke-body', 'Poké-Body')], max_length=20)),
                ('description', models.TextField()),
                ('damage', models.CharField(blank=True, help_text="e.g., '20+', '150', 'None'", max_length=20, null=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='core.card')),
            ],
            options={
                'verbose_name_plural': 'abilities',
                'ordering': ['card', 'ability_type'],
            },
        ),
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('deck_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_title', models.CharField(max_length=30)),
                ('user_description', models.CharField(max_length=200)),
                ('color_1', models.CharField(max_length=30)),
                ('color_2', models.IntegerField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField()),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('flagged', models.BooleanField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeckCard',
            fields=[
                ('relation_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deckcards', to='core.card')),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deckcards', to='core.deck')),
            ],
            options={
                'unique_together': {('deck', 'card')},
            },
        ),
        migrations.AddField(
            model_name='deck',
            name='cards',
            field=models.ManyToManyField(through='core.DeckCard', to='core.card'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('inappropriate', 'Inappropriate Content'), ('offensive', 'Offensive Language'), ('spam', 'Spam'), ('other', 'Other')], default='inappropriate', max_length=40)),
                ('details', models.TextField(help_text='Please provide specific details about the issue')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Action Taken'), ('rejected', 'No Action Needed')], default='pending', max_length=20)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='reports', to='core.deck')),
                ('reporter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnergyCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('ability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='energy_costs', to='core.ability')),
                ('energy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.energy')),
            ],
            options={
                'unique_together': {('energy', 'ability')},
            },
        ),
    ]
